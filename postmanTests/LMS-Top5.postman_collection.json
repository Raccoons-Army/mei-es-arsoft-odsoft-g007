{
	"info": {
		"_postman_id": "b6e33cd1-f6a3-4681-84cb-983bcc67126b",
		"name": "LMS-Top5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14152456"
	},
	"item": [
		{
			"name": "Author",
			"item": [
				{
					"name": "Get top5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"OK\", function(){\r",
									"    pm.response.to.have.status(200); \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/authors/top5",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"authors",
								"top5"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Book",
			"item": [
				{
					"name": "Get top5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"OK\", function(){\r",
									"    pm.response.to.have.status(200); \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/books/top5",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"books",
								"top5"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Genre",
			"item": [
				{
					"name": "Get top5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"OK\", function(){\r",
									"    pm.response.to.have.status(200); \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/genres/top5",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"genres",
								"top5"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"// Define the login payload",
					"const loginPayload = {",
					"    username: \"pedro@gmail.com\",",
					"    password: \"Pedrodascenas!123\"",
					"};",
					"",
					"// Get the host and baseUrl from environment variables",
					"const host = pm.environment.get(\"host\");",
					"const baseUrl = pm.environment.get(\"baseUrl\");",
					"",
					"// Perform the login request",
					"pm.sendRequest({",
					"    url: `${host}${baseUrl}/public/login`,",
					"    method: 'POST',",
					"    header: {",
					"        'Content-Type': 'application/json'",
					"    },",
					"    body: {",
					"        mode: 'raw',",
					"        raw: JSON.stringify(loginPayload)",
					"    }",
					"}, function (err, response) {",
					"    if (err) {",
					"        console.error(\"Login failed: \", err);",
					"    } else {",
					"        // Parse the response to extract the token",
					"        const responseBody = response.json();",
					"        const token = response.headers.get(\"Authorization\");",
					"",
					"        if (token) {",
					"            // Save the token to the environment variable",
					"            pm.environment.set(\"readerToken\", token);",
					"            console.log(\"Token saved successfully!\");",
					"        } else {",
					"            console.error(\"Token not found in response: \", responseBody);",
					"        }",
					"    }",
					"});",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}